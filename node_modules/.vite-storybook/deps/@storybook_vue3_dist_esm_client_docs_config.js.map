{
  "version": 3,
  "sources": ["../../@storybook/vue3/dist/esm/client/docs/extractArgTypes.js", "../../@storybook/vue3/dist/esm/client/docs/prepareForInline.js", "../../@storybook/vue3/dist/esm/client/docs/config.js"],
  "sourcesContent": ["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { hasDocgen, extractComponentProps, convert } from '@storybook/docs-tools';\nvar SECTIONS = ['props', 'events', 'slots'];\nexport var extractArgTypes = function extractArgTypes(component) {\n  if (!hasDocgen(component)) {\n    return null;\n  }\n\n  var results = {};\n  SECTIONS.forEach(function (section) {\n    var props = extractComponentProps(component, section);\n    props.forEach(function (_ref) {\n      var propDef = _ref.propDef,\n          docgenInfo = _ref.docgenInfo,\n          jsDocTags = _ref.jsDocTags;\n      var name = propDef.name,\n          type = propDef.type,\n          description = propDef.description,\n          defaultSummary = propDef.defaultValue,\n          required = propDef.required;\n      var sbType = section === 'props' ? convert(docgenInfo) : {\n        name: 'void'\n      };\n      results[name] = {\n        name: name,\n        description: description,\n        type: Object.assign({\n          required: required\n        }, sbType),\n        table: {\n          type: type,\n          jsDocTags: jsDocTags,\n          defaultValue: defaultSummary,\n          category: section\n        }\n      };\n    });\n  });\n  return results;\n};", "import React from 'react';\nimport * as Vue from 'vue';\nimport { app } from '../index'; // This is cast as `any` to workaround type errors caused by Vue 2 types\n\nvar _ref = Vue,\n    render = _ref.render,\n    h = _ref.h;\nexport var prepareForInline = function prepareForInline(storyFn, _ref2) {\n  var args = _ref2.args;\n  var component = storyFn();\n  var vnode = h(component, args); // By attaching the app context from `@storybook/vue3` to the vnode\n  // like this, these stoeis are able to access any app config stuff\n  // the end-user set inside `.storybook/preview.js`\n\n  vnode.appContext = app._context; // eslint-disable-line no-underscore-dangle\n\n  return /*#__PURE__*/React.createElement('div', {\n    ref: function ref(node) {\n      return node ? render(vnode, node) : null;\n    }\n  });\n};", "import { extractComponentDescription, enhanceArgTypes } from '@storybook/docs-tools';\nimport { extractArgTypes } from './extractArgTypes';\nimport { prepareForInline } from './prepareForInline';\nexport var parameters = {\n  docs: {\n    inlineStories: true,\n    prepareForInline: prepareForInline,\n    extractArgTypes: extractArgTypes,\n    extractComponentDescription: extractComponentDescription\n  }\n};\nexport var argTypesEnhancers = [enhanceArgTypes];"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAI,WAAW,CAAC,SAAS,UAAU,OAAO;AACnC,IAAI,kBAAkB,SAASA,iBAAgB,WAAW;AAC/D,MAAI,CAAC,UAAU,SAAS,GAAG;AACzB,WAAO;AAAA,EACT;AAEA,MAAI,UAAU,CAAC;AACf,WAAS,QAAQ,SAAU,SAAS;AAClC,QAAI,QAAQ,sBAAsB,WAAW,OAAO;AACpD,UAAM,QAAQ,SAAUC,OAAM;AAC5B,UAAI,UAAUA,MAAK,SACf,aAAaA,MAAK,YAClB,YAAYA,MAAK;AACrB,UAAI,OAAO,QAAQ,MACf,OAAO,QAAQ,MACf,cAAc,QAAQ,aACtB,iBAAiB,QAAQ,cACzB,WAAW,QAAQ;AACvB,UAAI,SAAS,YAAY,UAAU,QAAQ,UAAU,IAAI;AAAA,QACvD,MAAM;AAAA,MACR;AACA,cAAQ,IAAI,IAAI;AAAA,QACd;AAAA,QACA;AAAA,QACA,MAAM,OAAO,OAAO;AAAA,UAClB;AAAA,QACF,GAAG,MAAM;AAAA,QACT,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA,cAAc;AAAA,UACd,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACD,SAAO;AACT;;;AC5CA,mBAAkB;AAIlB,IAAI,OAAO;AAAX,IACI,SAAS,KAAK;AADlB,IAEI,IAAI,KAAK;AACN,IAAI,mBAAmB,SAASC,kBAAiB,SAAS,OAAO;AACtE,MAAI,OAAO,MAAM;AACjB,MAAI,YAAY,QAAQ;AACxB,MAAI,QAAQ,EAAE,WAAW,IAAI;AAI7B,QAAM,aAAa,IAAI;AAEvB,SAAoB,aAAAC,QAAM,cAAc,OAAO;AAAA,IAC7C,KAAK,SAAS,IAAI,MAAM;AACtB,aAAO,OAAO,OAAO,OAAO,IAAI,IAAI;AAAA,IACtC;AAAA,EACF,CAAC;AACH;;;AClBO,IAAI,aAAa;AAAA,EACtB,MAAM;AAAA,IACJ,eAAe;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACO,IAAI,oBAAoB,CAAC,eAAe;",
  "names": ["extractArgTypes", "_ref", "prepareForInline", "React"]
}
